variable
nusr 2
ccount 1
probs1 0.5
probs2 0.5
s2threads 1
end

device
cpu
end

lan
lan1
end

host machine1[1]
cpu count ccount
cpu buffer 99999
cpu schedP fcfs
end

host machine2[1]
cpu count ccount
cpu buffer 99999
cpu schedP fcfs
end

task t1
cpu servt 0.1
end

task t2
cpu servt 0.1
end
 

task t3
cpu servt 0.1
end

task t4
cpu servt 0.1
end

task t5
cpu servt 0.1
end

task t6
cpu servt 0.1
end

server s1
thread count 2
thread buffer 99999
thread schedP fcfs
task t1
task t3
task t4
task t6
end


server s2
thread count s2threads
thread buffer 99999
thread schedP fcfs
task t2
end

server s3
thread count 1
thread buffer 99999
thread schedP fcfs
task t5
end

deploy s1 machine1[1]
deploy s2 machine2[1]
deploy s3 machine2[1]

deploy machine1[1] lan1
deploy machine2[1] lan1

scenario sc1 prob probs1
    t1  t2 200 SYNC
    t2  t3 200
end

scenario sc2 prob probs2
    t4  t5 200 SYNC
    t5  t6 200
end

loadparams
   noofusers    nusr
   thinktime    exp(1)
end

modelparams
    method analytical
    type closed
    confint true
    replicationno 3
    startupsampleno 3000
    noofrequests 10000
    warnings disable
end

print "NumberofUsers	SC-1ResponseTime	SC-2ResponseTime	s2-ResponseTime	s1-Throughput	s1-Utilization	s2-Throughput	s2-Utilization	Machine1CPU-Throughput	Machine1CPU-Utilization	Machine2CPU-Throughput	Machine2CPU-Utilization	Machine2CPU-RT"

while(nusr < 15)
print nusr + "	"+ respt(sc1) + "	" + respt(sc2) + "	" + respt(machine2[1]:s2) + "	" + tput(machine1[1]:s1) + "	" + util(machine1[1]:s1) + "	" + tput(machine2[1]:s2) + "	" + util(machine2[1]:s2) + "	" + tput(machine1[1]:cpu) + "	" + util(machine1[1]:cpu) + "	" + tput(machine2[1]:cpu) + "	" + util(machine2[1]:cpu) + "	" + respt(machine2[1]:cpu)
nusr = nusr + 2
end

/*
probs1 = 0.5
probs2 = 0.5
s2threads = 1

print nusr + "	"+ respt(sc1) + "	" + respt(sc2) + "	" + "	" + respt(machine2[1]:s2) + "	" + tput(machine1[1]:s1) + "	" + util(machine1[1]:s1) + "	" + tput(machine2[1]:s2) + "	" + util(machine2[1]:s2) + "	" + tput(machine1[1]:cpu) + "	" + util(machine1[1]:cpu) + "	" + tput(machine2[1]:cpu) + "	" + util(machine2[1]:cpu) + "	" + respt(machine2[1]:cpu)
*/
