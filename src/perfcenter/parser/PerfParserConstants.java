/* Generated By:JavaCC: Do not edit this line. PerfParserConstants.java */
package perfcenter.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PerfParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SCENARIO = 7;
  /** RegularExpression Id. */
  int END = 8;
  /** RegularExpression Id. */
  int VARIABLE = 9;
  /** RegularExpression Id. */
  int DEVICE = 10;
  /** RegularExpression Id. */
  int PS = 11;
  /** RegularExpression Id. */
  int FCFS = 12;
  /** RegularExpression Id. */
  int LCFS = 13;
  /** RegularExpression Id. */
  int DEPLOY = 14;
  /** RegularExpression Id. */
  int UNDEPLOY = 15;
  /** RegularExpression Id. */
  int HOST = 16;
  /** RegularExpression Id. */
  int SERVER = 17;
  /** RegularExpression Id. */
  int COUNT = 18;
  /** RegularExpression Id. */
  int PROB = 19;
  /** RegularExpression Id. */
  int SYNC = 20;
  /** RegularExpression Id. */
  int SERVT = 21;
  /** RegularExpression Id. */
  int THREAD = 22;
  /** RegularExpression Id. */
  int TASK = 23;
  /** RegularExpression Id. */
  int BUFFER = 24;
  /** RegularExpression Id. */
  int VIRTRES = 25;
  /** RegularExpression Id. */
  int SCHEDP = 26;
  /** RegularExpression Id. */
  int SPEEDUP = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int RAM = 30;
  /** RegularExpression Id. */
  int STATICSIZE = 31;
  /** RegularExpression Id. */
  int REQUESTSIZE = 32;
  /** RegularExpression Id. */
  int SIZE = 33;
  /** RegularExpression Id. */
  int WARNINGS = 34;
  /** RegularExpression Id. */
  int POWERMANAGED = 35;
  /** RegularExpression Id. */
  int GOVERNOR = 36;
  /** RegularExpression Id. */
  int CONSERVATIVE = 37;
  /** RegularExpression Id. */
  int ONDEMAND = 38;
  /** RegularExpression Id. */
  int PERFORMANCE = 39;
  /** RegularExpression Id. */
  int POWERSAVE = 40;
  /** RegularExpression Id. */
  int USERSPACE = 41;
  /** RegularExpression Id. */
  int POWERMANAGEMENT = 42;
  /** RegularExpression Id. */
  int SPEEDLEVELS = 43;
  /** RegularExpression Id. */
  int POWERCONSUMEDLEVELS = 44;
  /** RegularExpression Id. */
  int IDLEPOWER = 45;
  /** RegularExpression Id. */
  int SETSPEEDLEVELINDEX = 46;
  /** RegularExpression Id. */
  int PROBEINTERVAL = 47;
  /** RegularExpression Id. */
  int PROBEINTERVALDOWNFACTOR = 48;
  /** RegularExpression Id. */
  int GOVERNOR_UP_THRESHOLD = 49;
  /** RegularExpression Id. */
  int GOVERNOR_DOWN_THRESHOLD = 50;
  /** RegularExpression Id. */
  int LAN = 51;
  /** RegularExpression Id. */
  int LINK = 52;
  /** RegularExpression Id. */
  int PROP = 53;
  /** RegularExpression Id. */
  int TRANS = 54;
  /** RegularExpression Id. */
  int HEADERSIZE = 55;
  /** RegularExpression Id. */
  int BYTES = 56;
  /** RegularExpression Id. */
  int MS = 57;
  /** RegularExpression Id. */
  int US = 58;
  /** RegularExpression Id. */
  int NS = 59;
  /** RegularExpression Id. */
  int KBPS = 60;
  /** RegularExpression Id. */
  int BPS = 61;
  /** RegularExpression Id. */
  int MBPS = 62;
  /** RegularExpression Id. */
  int GBPS = 63;
  /** RegularExpression Id. */
  int MTU = 64;
  /** RegularExpression Id. */
  int EXP = 65;
  /** RegularExpression Id. */
  int NOR = 66;
  /** RegularExpression Id. */
  int POI = 67;
  /** RegularExpression Id. */
  int UNI = 68;
  /** RegularExpression Id. */
  int BETA = 69;
  /** RegularExpression Id. */
  int BINOM = 70;
  /** RegularExpression Id. */
  int CHISQR = 71;
  /** RegularExpression Id. */
  int GAMMA = 72;
  /** RegularExpression Id. */
  int CONST = 73;
  /** RegularExpression Id. */
  int RESPT = 74;
  /** RegularExpression Id. */
  int WAITT = 75;
  /** RegularExpression Id. */
  int UTIL = 76;
  /** RegularExpression Id. */
  int QLEN = 77;
  /** RegularExpression Id. */
  int POWER = 78;
  /** RegularExpression Id. */
  int EPERR = 79;
  /** RegularExpression Id. */
  int PDP = 80;
  /** RegularExpression Id. */
  int PEFF = 81;
  /** RegularExpression Id. */
  int TPUT = 82;
  /** RegularExpression Id. */
  int BPUT = 83;
  /** RegularExpression Id. */
  int GPUT = 84;
  /** RegularExpression Id. */
  int BUFFTIMEOUT = 85;
  /** RegularExpression Id. */
  int DROPRATE = 86;
  /** RegularExpression Id. */
  int AVGSERVT = 87;
  /** RegularExpression Id. */
  int QPARMS = 88;
  /** RegularExpression Id. */
  int BOTTLENECK = 89;
  /** RegularExpression Id. */
  int BLOCKPROB = 90;
  /** RegularExpression Id. */
  int PRINTCFG = 91;
  /** RegularExpression Id. */
  int ARATE = 92;
  /** RegularExpression Id. */
  int ANALYSE = 93;
  /** RegularExpression Id. */
  int INTERVAL = 94;
  /** RegularExpression Id. */
  int FREQ = 95;
  /** RegularExpression Id. */
  int FOREACH = 96;
  /** RegularExpression Id. */
  int FOR = 97;
  /** RegularExpression Id. */
  int TO = 98;
  /** RegularExpression Id. */
  int INCR = 99;
  /** RegularExpression Id. */
  int DECR = 100;
  /** RegularExpression Id. */
  int SET = 101;
  /** RegularExpression Id. */
  int PRINT = 102;
  /** RegularExpression Id. */
  int IN = 103;
  /** RegularExpression Id. */
  int AND = 104;
  /** RegularExpression Id. */
  int IF = 105;
  /** RegularExpression Id. */
  int THEN = 106;
  /** RegularExpression Id. */
  int ELSE = 107;
  /** RegularExpression Id. */
  int WHILE = 108;
  /** RegularExpression Id. */
  int BREAK = 109;
  /** RegularExpression Id. */
  int BRANCH = 110;
  /** RegularExpression Id. */
  int MODELPARAMS = 111;
  /** RegularExpression Id. */
  int LOADPARAMS = 112;
  /** RegularExpression Id. */
  int ANALYTICAL = 113;
  /** RegularExpression Id. */
  int SIMULATION = 114;
  /** RegularExpression Id. */
  int THINKTIME = 115;
  /** RegularExpression Id. */
  int TIMEOUT = 116;
  /** RegularExpression Id. */
  int RETRYPROB = 117;
  /** RegularExpression Id. */
  int OPEN = 118;
  /** RegularExpression Id. */
  int TYPE = 119;
  /** RegularExpression Id. */
  int METHOD = 120;
  /** RegularExpression Id. */
  int CLOSED = 121;
  /** RegularExpression Id. */
  int NOOFUSERS = 122;
  /** RegularExpression Id. */
  int NOOFREQUESTS = 123;
  /** RegularExpression Id. */
  int SIMENDTIME = 124;
  /** RegularExpression Id. */
  int CONFINT = 125;
  /** RegularExpression Id. */
  int REPLICATIONNO = 126;
  /** RegularExpression Id. */
  int STARTUPSAMPLENO = 127;
  /** RegularExpression Id. */
  int OUTPUT = 128;
  /** RegularExpression Id. */
  int COOLDOWNSAMPLENO = 129;
  /** RegularExpression Id. */
  int ENABLE = 130;
  /** RegularExpression Id. */
  int DISABLE = 131;
  /** RegularExpression Id. */
  int MAXRETRY = 132;
  /** RegularExpression Id. */
  int WORKLOAD = 133;
  /** RegularExpression Id. */
  int CYCLIC = 134;
  /** RegularExpression Id. */
  int CONSTANT = 135;
  /** RegularExpression Id. */
  int NUMBER = 136;
  /** RegularExpression Id. */
  int STRING_LITERAL = 137;
  /** RegularExpression Id. */
  int FILENAME = 138;
  /** RegularExpression Id. */
  int IDENTIFIER = 139;
  /** RegularExpression Id. */
  int DIGITS = 140;
  /** RegularExpression Id. */
  int LETTER = 141;
  /** RegularExpression Id. */
  int DIGIT = 142;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"scenario\"",
    "\"end\"",
    "\"variable\"",
    "\"device\"",
    "\"ps\"",
    "\"fcfs\"",
    "\"lcfs\"",
    "\"deploy\"",
    "\"undeploy\"",
    "\"host\"",
    "\"server\"",
    "\"count\"",
    "\"prob\"",
    "\"sync\"",
    "\"servt\"",
    "\"thread\"",
    "\"task\"",
    "\"buffer\"",
    "\"virtres\"",
    "\"schedp\"",
    "\"speedup\"",
    "\"true\"",
    "\"false\"",
    "\"ram\"",
    "\"staticsize\"",
    "\"requestsize\"",
    "\"size\"",
    "\"warnings\"",
    "\"power_managed\"",
    "\"governor\"",
    "\"conservative\"",
    "\"ondemand\"",
    "\"performance\"",
    "\"powersave\"",
    "\"userspace\"",
    "\"powermanagement\"",
    "\"speed_levels\"",
    "\"power_consumed\"",
    "\"idlepower\"",
    "\"setspeed_level_index\"",
    "\"probe_interval\"",
    "\"probe_interval_down_factor\"",
    "\"governor_up_threshold\"",
    "\"governor_down_threshold\"",
    "\"lan\"",
    "\"link\"",
    "\"prop\"",
    "\"trans\"",
    "\"headersize\"",
    "\"bytes\"",
    "\"ms\"",
    "\"us\"",
    "\"ns\"",
    "\"Kbps\"",
    "\"bps\"",
    "\"Mbps\"",
    "\"Gbps\"",
    "\"mtu\"",
    "\"exp\"",
    "\"nor\"",
    "\"poi\"",
    "\"uni\"",
    "\"beta\"",
    "\"binom\"",
    "\"chisqr\"",
    "\"gamma\"",
    "\"const\"",
    "\"respt\"",
    "\"waitt\"",
    "\"util\"",
    "\"qlen\"",
    "\"power\"",
    "\"eperr\"",
    "\"pdp\"",
    "\"peff\"",
    "\"tput\"",
    "\"bput\"",
    "\"gput\"",
    "\"buffTimeout\"",
    "\"droprate\"",
    "\"avgservt\"",
    "\"qparms\"",
    "\"bottleneck\"",
    "\"blockprob\"",
    "\"printcfg\"",
    "\"arate\"",
    "\"analyse\"",
    "\"interval\"",
    "\"freq\"",
    "\"foreach\"",
    "\"for\"",
    "\"to\"",
    "\"incr\"",
    "\"decr\"",
    "\"set\"",
    "\"print\"",
    "\"in\"",
    "\"and\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"break\"",
    "\"branch\"",
    "\"modelparams\"",
    "\"loadparams\"",
    "\"analytical\"",
    "\"simulation\"",
    "\"thinktime\"",
    "\"timeout\"",
    "\"retryProb\"",
    "\"open\"",
    "\"type\"",
    "\"method\"",
    "\"closed\"",
    "\"noofusers\"",
    "\"noofrequests\"",
    "\"simendtime\"",
    "\"confint\"",
    "\"replicationno\"",
    "\"startupsampleno\"",
    "\"output\"",
    "\"cooldownsampleno\"",
    "\"enable\"",
    "\"disable\"",
    "\"maxretry\"",
    "\"workload\"",
    "\"cyclic\"",
    "\"constant\"",
    "<NUMBER>",
    "<STRING_LITERAL>",
    "<FILENAME>",
    "<IDENTIFIER>",
    "<DIGITS>",
    "<LETTER>",
    "<DIGIT>",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"+\"",
    "\":\"",
    "\"()\"",
    "\"=\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
